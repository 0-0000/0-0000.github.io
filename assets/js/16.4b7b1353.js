(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{287:function(_,v,t){"use strict";t.r(v);var e=t(14),a=Object(e.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"迷你世界脚本的对-lua-的修改"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#迷你世界脚本的对-lua-的修改"}},[_._v("#")]),_._v(" 迷你世界脚本的对 Lua 的修改")]),_._v(" "),v("p",[_._v("首先，要知道迷你世界的 Lua 脚本解释器为 [Lua5.1][http://www.Lua.org/versions.html#5.1] 。")]),_._v(" "),v("p",[_._v("但是，脚本运行环境与标准的 Lua5.1 环境有很大差异，举个简单的事实， "),v("code",[_._v("_G")]),_._v(" 表实际不包含任何值，对 "),v("code",[_._v("_G")]),_._v(" 的修改和读取都是由它的元表完成的，对环境的修复也要以这个元表为突破口，详见 "),v("code",[_._v("core.lua")]),_._v(" 。")]),_._v(" "),v("p",[_._v("以下假设你还未使用 miniExtend ，使用 miniExtend 会改变这些现象，详见 [miniExtend Core][/api/core.html] 。")]),_._v(" "),v("h2",{attrs:{id:"删除的基本函数和库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#删除的基本函数和库"}},[_._v("#")]),_._v(" 删除的基本函数和库")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("io")]),_._v("、"),v("code",[_._v("package")]),_._v(" 中的所有值。")]),_._v(" "),v("li",[v("code",[_._v("os")]),_._v(" 中除了 "),v("code",[_._v("os.dateLua、os.timeLua")]),_._v(" 以外的所有值。")])]),_._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),v("p",[_._v("实际上，输出的值并没有真正的从内存上删除，只是无法通过 "),v("code",[_._v("_G")]),_._v(" 索引而已。")])]),_._v(" "),v("h2",{attrs:{id:"修改的基本函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修改的基本函数"}},[_._v("#")]),_._v(" 修改的基本函数")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("dofileLua")]),_._v(" 和 "),v("code",[_._v("loadfileLua")]),_._v(" 函数不会获得它们应有的效果，应该是什么都不做的空函数。")]),_._v(" "),v("li",[v("code",[_._v("errorLua")]),_._v(" 函数虽然仍会在日志中输出错误信息，但不会抛出错误来终止函数运行，在没有 miniExtend 时，开发者可能不得不使用 "),v("code",[_._v("return error(message);")]),_._v(" 。")]),_._v(" "),v("li",[_._v("调用 "),v("code",[_._v("loadstringLua")]),_._v(" 函数会弹出漂浮文字，提示开发者使用 "),v("code",[_._v("LoadLuaScriptLua")]),_._v(" ，而不会做其它事。")]),_._v(" "),v("li",[v("code",[_._v("print")]),_._v("函数在"),v("a",{attrs:{title:"玩法模式下开发者可按右上角的“！”按钮打开日志"}},[_._v("日志")]),_._v("中输出而不是在"),v("a",{attrs:{title:"迷你世界是 GUI 软件，正常情况不会显示控制台"}},[_._v("控制台")]),_._v("输出，且格式化方式与标准 "),v("code",[_._v("print、")]),_._v(" 差异很大，具体格式化方式可自行测试。")])]),_._v(" "),v("h2",{attrs:{id:"添加的函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#添加的函数"}},[_._v("#")]),_._v(" 添加的函数")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("copy_table(table)")]),_._v(" ： 返回 "),v("code",[_._v("table")]),_._v(" 的深拷贝")]),_._v(" "),v("li",[v("code",[_._v("isTypeError(type, ...)")]),_._v(" ：如果所有可变参数的类型都等于 "),v("code",[_._v("type")]),_._v(" ，返回 "),v("code",[_._v("false")]),_._v(" ，否则返回 "),v("code",[_._v("true")]),_._v(" 。")]),_._v(" "),v("li",[v("code",[_._v("print_console")]),_._v(" ：等价于调用标准 Lua 的 "),v("code",[_._v("print、")]),_._v(" 函数，要注意该函数会输出到控制，而非日志。")]),_._v(" "),v("li",[v("code",[_._v("printtag(tag, ...)")]),_._v(" ：在日志以 "),v("code",[_._v("tag")]),_._v(" 为标签格式化输出，参见 [printLua][print] 函数，调用 "),v("code",[_._v("print;")]),_._v(" 等价于调用 "),v("code",[_._v('printtag("global", ...)')]),_._v(" ，也就是说 "),v("code",[_._v("printLua")]),_._v(" 函数使用标签 "),v("code",[_._v('"global"')]),_._v(" 。")]),_._v(" "),v("li",[v("code",[_._v("warn(message)")]),_._v(" ：在日志中输出警告信息（有黄色高亮标记） "),v("code",[_._v("message")]),_._v(" ，使用 "),v("code",[_._v('"warning"')]),_._v(" 作为标签。")])]),_._v(" "),v("p",[_._v("miniExtend 没有修改这些添加的函数，不建议使用这些函数，它们应该只被内部调用。")])])}),[],!1,null,null,null);v.default=a.exports}}]);